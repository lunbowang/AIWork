// Code generated by goctl. DO NOT EDIT.
package domain

type IdPathReq struct {
	Id string `uri:"id,omitempty"`
}

type IdResp struct {
	Id string `json:"id,omitempty"`
}

type IdRespInfo struct {
	Code int     `json:"code"`
	Data *IdResp `json:"data"`
}

type User struct {
	Id       string `json:"id,omitempty"`
	Password string `json:"password,omitempty"`
	Name     string `json:"name,omitempty"`
	Status   int    `json:"status,omitempty"`
}

type LoginReq struct {
	Name     string `json:"name,omitempty"`
	Password string `json:"password,omitempty"`
}

type LoginResp struct {
	Status       int    `json:"status,omitempty"`
	Id           string `json:"id,omitempty"`
	Name         string `json:"name,omitempty"`
	AccessToken  string `json:"token,omitempty"`
	AccessExpire int64  `json:"accessExpire,omitempty"`
	RefreshAfter int64  `json:"refreshAfter,omitempty"`
}

type UserListReq struct {
	Ids   []string `json:"ids,omitempty"`
	Name  string   `json:"name,omitempty"`
	Page  int      `json:"page,omitempty"`
	Count int      `json:"count,omitempty"`
}

type UserListResp struct {
	Count int64   `json:"count"`
	List  []*User `json:"data"`
}

type UpPasswordReq struct {
	Id     string `json:"id"`
	OldPwd string `json:"oldPwd"`
	NewPwd string `json:"newPwd"`
}

type Department struct {
	Id         string        `json:"id, omitempty"`
	Name       string        `json:"name, omitempty"`
	ParentId   string        `json:"parentId, omitempty"`
	ParentPath string        `json:"parentPath, omitempty"`
	Level      int           `json:"level, omitempty"`
	LeaderId   string        `json:"leaderId, omitempty"`
	Leader     string        `json:"leader, omitempty"`
	Count      int64         `json:"count, omitempty"`
	Child      []*Department `json:"child, omitempty"`
}

type DepartmentUser struct {
	Id       string `json:"id,omitempty"`
	UserId   string `json:"user,omitempty"`
	DepId    string `json:"dep,omitempty"`
	UserName string `json:"userName,omitempty"`
}

type DepartmentListReq struct {
	DepId  string   `json:"depId,omitempty"`
	DepIds []string `json:"depIds,omitempty"`
}

type DepPathReq struct {
	DepId  string `path:"depId,omitempty"`
	UserId string `path:"userId,omitempty"`
}

type SetDepUser struct {
	DepId   string   `json:"depId"`
	UserIds []string `json:"userIds"`
}

type DepartmentSoaResp struct {
	Id       string            `json:"id, omitempty"`
	Name     string            `json:"name, omitempty"`
	ParentId string            `json:"parentId, omitempty"`
	Level    int               `json:"level, omitempty"`
	LeaderId string            `json:"leaderId, omitempty"`
	Leader   string            `json:"leader, omitempty"`
	Count    int64             `json:"count, omitempty"`
	Users    []*DepartmentUser `json:"users, omitempty"`
	Child    []*Department     `json:"child, omitempty"`
}

type TodoRecord struct {
	TodoId   string `json:"todoId,omitempty"`
	UserId   string `json:"userId,omitempty"`
	UserName string `json:"userName,omitempty"`
	Content  string `json:"content,omitempty"`
	Image    string `json:"image,omitempty"`
	CreateAt int64  `json:"createAt,omitempty"`
}

type Todo struct {
	ID          string        `json:"id,omitempty"`
	CreatorId   string        `json:"creatorId,omitempty"`
	CreatorName string        `json:"creatorName,omitempty"`
	Title       string        `json:"title,omitempty"`
	DeadlineAt  int64         `json:"deadlineAt,omitempty"`
	Desc        string        `json:"desc,omitempty"`
	Status      int           `json:"status,omitempty"`
	Records     []*TodoRecord `json:"records,omitempty"`
	ExecuteIds  []string      `json:"executeIds,omitempty"`
	TodoStatus  int           `json:"todoStatus,omitempty"`
}

type UserTodo struct {
	ID         string `json:"id,omitempty"`
	UserId     string `json:"userId,omitempty"`
	UserName   string `json:"userName,omitempty"`
	TodoId     string `json:"todoId,omitempty"`
	TodoStatus int    `json:"todoStatus,omitempty"`
}

type TodoInfoResp struct {
	ID          string        `json:"id,omitempty"`
	CreatorId   string        `json:"creatorId,omitempty"`
	CreatorName string        `json:"creatorName,omitempty"`
	Title       string        `json:"title,omitempty"`
	DeadlineAt  int64         `json:"deadlineAt,omitempty"`
	Desc        string        `json:"desc,omitempty"`
	Records     []*TodoRecord `json:"records,omitempty"`
	ExecuteIds  []*UserTodo   `json:"executeIds,omitempty"`
	Status      int           `json:"status,omitempty"`
	TodoStatus  int           `json:"todoStatus,omitempty"`
}

type FinishedTodoReq struct {
	UserId string `json:"userId"`
	TodoId string `json:"todoId"`
}

type TodoListReq struct {
	Id        string `form:"id,omitempty"`
	UserId    string `form:"userId,omitempty"`
	Page      int    `form:"page,omitempty"`
	Count     int    `form:"count,omitempty"`
	StartTime int64  `form:"startTime,omitempty"`
	EndTime   int64  `form:"endTime,omitempty"`
}

type TodoListResp struct {
	Count int64   `json:"count"`
	List  []*Todo `json:"data"`
}

type Approver struct {
	UserId   string `json:"userId"`
	UserName string `json:"userName"`
	Status   int    `json:"status"`
	Reason   string `json:"reason,omitempty"` //请假原由
}

type MakeCard struct {
	Date      int64  `json:"date,omitempty" mapstructure:"date,omitempty"`                   //补卡时间
	Reason    string `json:"reason,omitempty" mapstructure:"reason,omitempty"`               //补卡理由
	Day       int64  `json:"day,omitempty" mapstructure:"day,omitempty"`                     //补卡日期(20221011)
	CheckType int    `json:"workCheckType,omitempty" mapstructure:"workCheckType,omitempty"` //补卡类型
}

type Leave struct {
	Type      int     `json:"type,omitempty" mapstructure:"type,omitempty"`           //请假类型
	StartTime int64   `json:"startTime,omitempty" mapstructure:"startTime,omitempty"` //开始时间
	EndTime   int64   `json:"endTime,omitempty" mapstructure:"endTime,omitempty"`     //结束时间
	Duration  float32 `json:"duration,omitempty" mapstructure:"duration,omitempty"`   //时长
	Reason    string  `json:"reason,omitempty" mapstructure:"reason,omitempty"`       //请假原由
	TimeType  int     `json:"timeType,omitempty" mapstructure:"timeType,omitempty"`   //请假类型  1=小时 2=天
}

type GoOut struct {
	StartTime int64   `json:"startTime,omitempty" mapstructure:"omitempty"` //开始时间
	EndTime   int64   `json:"endTime,omitempty" mapstructure:"omitempty"`   //结束时间
	Duration  float32 `json:"duration,omitempty" mapstructure:"omitempty"`  //时长
	Reason    string  `json:"reason,omitempty" mapstructure:"omitempty"`    //请假原由
}

type Approval struct {
	Id          string    `json:"id,omitempty"`
	UserId      string    `json:"userId,omitempty"`
	No          string    `json:"no,omitempty"`
	Type        int       `json:"type,omitempty"`
	Status      int       `json:"status,omitempty"`
	Title       string    `json:"title,omitempty"`
	Abstract    string    `json:"abstract,omitempty"`
	Reason      string    `json:"reason,omitempty"`
	FinishAt    int64     `json:"finishAt,omitempty"`
	FinishDay   int64     `json:"finishDay,omitempty"`
	FinishMonth int64     `json:"finishMonth,omitempty"`
	FinishYeas  int64     `json:"finishYeas,omitempty"`
	MakeCard    *MakeCard `json:"makeCard,omitempty"`
	Leave       *Leave    `json:"leave,omitempty"`
	GoOut       *GoOut    `json:"goOut,omitempty"`
	UpdateAt    int64     `json:"updateAt,omitempty"`
	CreateAt    int64     `json:"createAt,omitempty"`
}

type ApprovalInfoResp struct {
	Id          string      `json:"id"`
	User        *Approver   `json:"user"`
	No          string      `json:"no"`
	Type        int         `json:"type"`
	Status      int         `json:"status"`
	Title       string      `json:"title"`
	Abstract    string      `json:"abstract"`
	Reason      string      `json:"reason"`
	Approver    *Approver   `json:"approver"`
	Approvers   []*Approver `json:"approvers"`
	CopyPersons []*Approver `json:"copyPersons"`
	FinishAt    int64       `json:"finishAt"`
	FinishDay   int64       `json:"finishDay"`
	FinishMonth int64       `json:"finishMonth"`
	FinishYeas  int64       `json:"finishYeas"`
	MakeCard    *MakeCard   `json:"makeCard"`
	Leave       *Leave      `json:"leave"`
	GoOut       *GoOut      `json:"goOut"`
	UpdateAt    int64       `json:"updateAt"`
	CreateAt    int64       `json:"createAt"`
}

type DisposeReq struct {
	Status     int
	Reason     string
	ApprovalId string
}

type ApprovalListReq struct {
	Id     string `json:"id,omitempty" form:"id,omitempty"`
	UserId string `json:"userId,omitempty" form:"userId,omitempty"`
	Type   int    `json:"type,omitempty" form:"type,omitempty"`
	Page   int    `json:"page,omitempty" form:"page,omitempty"`
	Count  int    `json:"count,omitempty" form:"count,omitempty"`
}

type ApprovalList struct {
	Id              string `json:"id"`
	Type            int    `json:"type"`
	Status          int    `json:"status"`
	Title           string `json:"title"`
	Abstract        string `json:"abstract"`
	CreateId        string `json:"createId"`
	ParticipatingId string `json:"participatingId"`
}

type ApprovalListResp struct {
	Count int64           `json:"count"`
	List  []*ApprovalList `json:"data"`
}

type ChatReq struct {
	Prompts    string `json:"prompts,omitempty"`
	ChatType   int    `json:"chatType,omitempty"`
	RelationId int    `json:"relationId,omitempty"`
	StartTime  int64  `json:"startTime,omitempty"`
	EndTime    int64  `json:"endTime,omitempty"`
	Voice      string `json:"voice,omitempty"`
}

type ChatResp struct {
	ChatType int         `json:"chatType"`
	Data     interface{} `json:"data"`
}

type FileResp struct {
	Host     string `json:"host"`
	File     string `json:"file"`
	Filename string `json:"filename"`
}

type FileListResp struct {
	List []*FileResp `json:"list"`
}
