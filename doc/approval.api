syntax = "v1"

info (
	title: "后台系统admin"
	author: "gitee.com/dn-jinmin"
)

type (
    Approver {
        UserId      string      `json:"userId"`
        UserName    string      `json:"userName"`
        Status      int         `json:"status"`
        Reason    string        `json:"reason,omitempty"`    //请假原由
    }
    MakeCard {
        Date         int64         `json:"date,omitempty" mapstructure:"date,omitempty"`          //补卡时间
        Reason       string        `json:"reason,omitempty" mapstructure:"reason,omitempty"`        //补卡理由
        Day          int64         `json:"day,omitempty" mapstructure:"day,omitempty"`           //补卡日期(20221011)
        CheckType    int           `json:"workCheckType,omitempty" mapstructure:"workCheckType,omitempty"` //补卡类型
    }
	Leave {
		Type      int            `json:"type,omitempty" mapstructure:"type,omitempty"`      //请假类型
		StartTime int64          `json:"startTime,omitempty" mapstructure:"startTime,omitempty"` //开始时间
		EndTime   int64          `json:"endTime,omitempty" mapstructure:"endTime,omitempty"`   //结束时间
		Duration  float32        `json:"duration,omitempty" mapstructure:"duration,omitempty"`  //时长
		Reason    string         `json:"reason,omitempty" mapstructure:"reason,omitempty"`    //请假原由
		TimeType  int            `json:"timeType,omitempty" mapstructure:"timeType,omitempty"`  //请假类型  1=小时 2=天
	}
    GoOut {
		StartTime int64   `json:"startTime,omitempty" mapstructure:"omitempty"` //开始时间
		EndTime   int64   `json:"endTime,omitempty" mapstructure:"omitempty"`   //结束时间
		Duration  float32 `json:"duration,omitempty" mapstructure:"omitempty"`  //时长
		Reason    string  `json:"reason,omitempty" mapstructure:"omitempty"`    //请假原由
	}

    Approval {
        Id       string         `json:"id,omitempty"`
        UserId   string         `json:"userId,omitempty"`
		No       string         `json:"no,omitempty"`
		Type     int            `json:"type,omitempty"`
		Status   int            `json:"status,omitempty"`
		Title    string         `json:"title,omitempty"`
		Abstract string         `json:"abstract,omitempty"`
		Reason   string         `json:"reason,omitempty"`

		FinishAt    int64       `json:"finishAt,omitempty"`
		FinishDay   int64       `json:"finishDay,omitempty"`
		FinishMonth int64       `json:"finishMonth,omitempty"`
		FinishYeas  int64       `json:"finishYeas,omitempty"`

		MakeCard *MakeCard      `json:"makeCard,omitempty"`
		Leave    *Leave         `json:"leave,omitempty"`
		GoOut    *GoOut         `json:"goOut,omitempty"`

		UpdateAt int64          `json:"updateAt,omitempty"`
        CreateAt int64          `json:"createAt,omitempty"`
    }

    ApprovalInfoResp {
        Id       string         `json:"id"`
        User     *Approver       `json:"user"`
        No       string         `json:"no"`
        Type     int            `json:"type"`
        Status   int            `json:"status"`
        Title    string         `json:"title"`
        Abstract string         `json:"abstract"`
        Reason   string         `json:"reason"`
        Approver *Approver      `json:"approver"`
        Approvers   []*Approver `json:"approvers"`
        CopyPersons []*Approver `json:"copyPersons"`
        FinishAt    int64       `json:"finishAt"`
        FinishDay   int64       `json:"finishDay"`
        FinishMonth int64       `json:"finishMonth"`
        FinishYeas  int64       `json:"finishYeas"`

        MakeCard *MakeCard      `json:"makeCard"`
        Leave    *Leave         `json:"leave"`
        GoOut    *GoOut         `json:"goOut"`

        UpdateAt int64          `json:"updateAt"`
        CreateAt int64          `json:"createAt"`
    }

    DisposeReq {
        Status      int
        Reason      string
        ApprovalId  string
    }

    ApprovalListReq {
        Id string       `json:"id,omitempty" form:"id,omitempty"`
        UserId  string  `json:"userId,omitempty" form:"userId,omitempty"`
        Type    int     `json:"type,omitempty" form:"type,omitempty"`
        Page    int     `json:"page,omitempty" form:"page,omitempty"`
        Count   int     `json:"count,omitempty" form:"count,omitempty"`
    }
    ApprovalList {
        Id       string         `json:"id"`
        Type     int            `json:"type"`
        Status   int            `json:"status"`
        Title    string         `json:"title"`
        Abstract string         `json:"abstract"`
        CreateId string         `json:"createId"`
        ParticipatingId string  `json:"participatingId"`
    }
    ApprovalListResp {
        Count int64             `json:"count"`
        List []*ApprovalList    `json:"data"`
    }
)

@server(
    middleware: Jwt
    group: v1/approval
    logic: Approval
)
service Approval {
    @server(
        handler: Info
        logic: Approval.Info
    )
    get /:id(IdPathReq) returns (ApprovalInfoResp)

    @server(
        handler: Create
        logic: Approval.Create
    )
    post / (Approval) returns (IdResp)

    @server(
        handler: Dispose
        logic: Approval.Dispose
    )
    put /dispose (DisposeReq)

    @server(
        handler: List
        logic: Approval.List
    )
    get /list (ApprovalListReq) returns(ApprovalListResp)
}